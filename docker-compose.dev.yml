version: '3'

services:
  db:
    container_name: db
    image: mysql:5.7
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: test_database
      MYSQL_USER: docker
      MYSQL_PASSWORD: docker
      TZ: 'Asia/Tokyo'
    command: mysqld --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    volumes:
      - ./docker/db/data:/var/lib/mysql
      - ./docker/db/my.cnf:/etc/mysql/conf.d/my.cnf
      - ./docker/db/sql:/docker-entrypoint-initdb.d
    ports:
      - 3306:3306
    networks:
      - django-nginx

  backend:
    container_name: backend
    build: ./backend
    command: /start_dev.sh
    volumes:
      - .:/code
      - django-static:/backend/static
    networks:
      - django-nginx
    depends_on:
      - db

  frontend:
    container_name: frontend
    build:
      context: ./frontend
    volumes:
      - './frontend:/app/:ro'
      - '/app/node_modules'
    ports:
      - "8080:8080"
    depends_on:
      - backend
    networks:
      - django-nginx
    environment:
      - NODE_ENV=development

  nginx:
    image: nginx:alpine
    container_name: nginx
    ports:
      - "80:80"
    depends_on:
      - backend
    volumes:
      - ./nginx/dev.conf:/etc/nginx/nginx.conf:ro
      - django-static:/usr/src/app/static
    networks:
      - django-nginx

  redis:
    image: redis:alpine
    container_name: redis
    networks:
      - django-nginx

  celery:
    build: ./backend
    container_name: celery
    command: bash -c 'celery worker --app=backend.celery_app:app --loglevel=info'
    volumes:
      - ./backend:/code
    depends_on:
      - db
      - redis
    networks:
      - django-nginx

  portainer:
    image: portainer/portainer
    container_name: portainer
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer-data:/data
    ports:
      - 9000:9000

volumes:
  django-static:
  portainer-data:

networks:
  django-nginx:
    driver: bridge
